//
//  CenterViewController.m
//  BodyScale
//
//  Created by August on 14-10-11.
//  Copyright (c) 2014年 August. All rights reserved.
//

#import "CenterViewController.h"
#import "M13ProgressViewSegmentedRing.h"
#import "CustomProgressView.h"
#import "HealthIndexView.h"
#import "UserInfoListDao.h"
#import "UIButton+WebCache.h"

#define kCellReuseIdentifier @"indexCell"
#define _tag_share 1000

#define share_Height 140

@interface CenterViewController ()<UITableViewDataSource,UITableViewDelegate>
{
    UIView         *hudBgView;//透明背景
}


@property (strong, nonatomic) HealthIndexView *healthIndexView;
@property (strong, nonatomic) CustomProgressView * progressView;
@property (strong, nonatomic) UITableView *tableView;
@property (strong, nonatomic) UIView *shareBgView;
@property (strong, nonatomic) UIView *shareView;
@property (nonatomic, strong) UserInfoListDao *userInfoListDao;

@property (strong, nonatomic) MesureModel * mesureModel;
@property (strong, nonatomic) NSMutableArray *gList;
@property(nonatomic,weak)UIView *sView;
@end

@implementation CenterViewController
#pragma mark
#pragma mark Init & Dealloc
- (instancetype)init
{
    self = [super init];
    if (self)
    {
    }
    return self;
}
- (instancetype)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil ishasTextFeild:(BOOL)haseTextFeild
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil ishasTextFeild:haseTextFeild];
    if (self)
    {
        self.fillData = [[UserFillData alloc]init];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(deviceConnectFail) name:@"DeviceConnectFail" object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(deviceDisConnectOK) name:@"DeviceDisConnectOK" object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(deviceConnectOK) name:@"DeviceConnectOK" object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(deviceDeviceDiscover) name:@"DeviceDiscover" object:nil];
    }
    return self;
}
-(void)dealloc
{
    [[NSNotificationCenter defaultCenter] removeObserver:self];
}
#pragma mark
#pragma mark Init & Add
- (HealthIndexView *)healthIndexView
{
    if (!_healthIndexView)
    {
        _healthIndexView = [[HealthIndexView alloc] init];
        [self.view addSubview:_healthIndexView];
        [_healthIndexView.headBt addTarget:self action:@selector(selectHeadBt) forControlEvents:UIControlEventTouchUpInside];
        [_healthIndexView.shareBt addTarget:self action:@selector(selectshareBt) forControlEvents:UIControlEventTouchUpInside];
    }
    return _healthIndexView;
}
- (CustomProgressView *)progressView
{
    if (!_progressView)
    {
        _progressView = [[CustomProgressView alloc] initWithConnected:[[NSUserDefaults standardUserDefaults] boolForKey:HASALREADYCONNECTED]];
        _progressView.backgroundColor = [UIColor clearColor];
        [self.view addSubview:_progressView];
        [_progressView setShowPercentage:NO];
        [_progressView showConnectImg];
    }
    return _progressView;
}
- (UITableView *)tableView
{
    if (!_tableView)
    {
        _tableView = [[UITableView alloc] init];
        _tableView.dataSource = self;
        _tableView.delegate = self;
        _tableView.backgroundColor = [UIColor clearColor];
        [self.view addSubview:_tableView];
        [_tableView registerClass:[CenterTableViewCell class] forCellReuseIdentifier:kCellReuseIdentifier];
    }
    return _tableView;
}
- (UIView *)shareBgView
{
    if (!_shareBgView)
    {
        _shareBgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height)];
        [_shareBgView setBackgroundColor:[UIColor clearColor]];
        UIView *blackView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height)];
        [blackView setBackgroundColor:[UIColor blackColor]];
        [blackView setAlpha:0.5];
        [_shareBgView addSubview:blackView];
        
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(removeBlackView)];
        [blackView addGestureRecognizer:tap];
        
        [_shareBgView addSubview:self.shareView];
    }
    return _shareBgView;
}
- (UIView *)shareView
{
    if (!_shareView)
    {
        _shareView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, share_Height)];
        [_shareView setBackgroundColor:[UIColor whiteColor]];
        
        UIView *greenView = [[UIView alloc] initWithFrame:CGRectMake(0,0, Screen_Width, 2)];
        [greenView setBackgroundColor:BGColor];
        [_shareView addSubview:greenView];
        
        UILabel *textLb = [[UILabel alloc] initWithFrame:CGRectMake(0, 10, Screen_Width, 24)];
        [textLb setTextColor:BGColor];
        [textLb setFont:[UIFont boldSystemFontOfSize:14]];
        [textLb setText:@"分享到社交网络"];
        [textLb setTextAlignment:NSTextAlignmentCenter];
        
        [_shareView addSubview:textLb];
        NSArray *sImgArray = @[@"weixin-Firend",@"FrendGroup",@"QQSpace",@"sina"];
        NSArray *sTextArray = @[@"微信好友",@"朋友圈",@"QQ空间",@"新浪微博"];
        for (int i =0; i<4; i++)
        {
            ButtonExten *bt = [ButtonExten buttonWithType:UIButtonTypeCustom];
            [bt setFrame:CGRectMake((Screen_Width-45*4-20*4)/2+75*i, 50, 45, 50)];
            [bt setImage:[UIImage imageNamed:[NSString stringWithFormat:@"%@",[sImgArray objectAtIndex:i]]] WithDownText:[NSString stringWithFormat:@"%@",[sTextArray objectAtIndex:i]]];
            [bt addTarget:self action:@selector(shareSpace:) forControlEvents:UIControlEventTouchUpInside];
            [_shareView addSubview:bt];
            [bt setTitleColor:BGColor forState:UIControlStateNormal];
            [bt setTag:_tag_share+i];
        }
    }
    return _shareView;
}
- (MesureModel *)mesureModel
{
    if (!_mesureModel)
    {
        _mesureModel = [[MesureModel alloc]init];
    }
    return _mesureModel;
}
- (UserInfoListDao *)userInfoListDao
{
    if (!_userInfoListDao)
    {
        _userInfoListDao = [[UserInfoListDao alloc] init];
    }
    return _userInfoListDao;
}
- (NSMutableArray *)gList
{
    if (!_gList)
    {
        _gList = [[NSMutableArray alloc] init];
        NSArray *array1=[NSArray arrayWithObjects:@"weight",@"fatPercentage",@"waterContent",@"bmr",@"skinfat",@"boneweight",@"muscle",@"infat",@"bodyage", nil];
        NSArray *array2=[NSArray arrayWithObjects:@"体重",@"体脂率",@"水含量", @"BMR",@"皮下脂肪",@"骨骼重量",@"肌肉比例",@"内脏脂肪",@"身体年龄",nil];
        for (int i =0; i < array1.count;i++ )
        {
            WeightModel * model = [[WeightModel alloc]init];
            model.imagePath = [NSString stringWithFormat:@"%@",[array1 objectAtIndex:i]];
            model.weightName = [NSString stringWithFormat:@"%@",[array2 objectAtIndex:i]];
            [_gList addObject:model];
        }
    }
    return _gList;
}
#pragma mark
#pragma mark - System Action
- (void)viewDidLoad
{
    [super viewDidLoad];
    self.navigationController.navigationBarHidden = YES;
    [self baseConfigs];

}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    if ([AppDelegate currentAppDelegate].connectType == 0)
    {
        [self.progressView showConnectImg];
    }
    else if ([AppDelegate currentAppDelegate].connectType == 1)
    {
        [self deviceConnectOK];
    }
    else if ([AppDelegate currentAppDelegate].connectType == 2)
    {
        [self deviceDisConnectOK];
    }
    else if ([AppDelegate currentAppDelegate].connectType == 3)
    {
        [self deviceConnectFail];
    }
    
//    [self baseConfigs];
}
- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
}
#pragma mark
#pragma mark - Other Action
-(void)baseConfigs
{
    [self initBaseView];
    [self initBaseData];
    
    if ([[FFConfig currentConfig].isLogined boolValue]== NO)
    {
        self.healthIndexView.userNameLb.text = [FFConfig currentConfig].userNickName;
        [self.healthIndexView.headBt sd_setImageWithURL:[NSURL URLWithString:@""] forState:UIControlStateNormal placeholderImage:[UIImage imageNamed:@"DefaultHeader.png"]];
    }
    else
    {
        if ([self.userInfoListDao getUserInfoListFromDBById:@{@"userInfoSuperId":[FFConfig currentConfig].userId}] != nil && [[self.userInfoListDao getUserInfoListFromDBById:@{@"userInfoSuperId":[FFConfig currentConfig].userId}] count] > 0)
        {
            NSMutableArray *tMArray = [self.userInfoListDao getUserInfoListFromDBById:@{@"userInfoSuperId":[FFConfig currentConfig].userId}];
            if (tMArray.count > 0)
            {
                for (NSDictionary *tDict in tMArray)
                {
                    if ([[FFConfig currentConfig].nowUserId intValue] == [tDict[@"userInfoId"] intValue])
                    {
                        [self.healthIndexView.headBt sd_setImageWithURL:[NSURL URLWithString:tDict[@"userInfoHeader"]] forState:UIControlStateNormal placeholderImage:[UIImage imageNamed:@"DefaultHeader.png"]];
                        self.healthIndexView.userNameLb.text = tDict[@"userInfoNickName"];
                        break;
                    }
                }
            }
        }
        else
        {
            [self.healthIndexView.headBt sd_setImageWithURL:[NSURL URLWithString:[FFConfig currentConfig].userHeader] forState:UIControlStateNormal placeholderImage:[UIImage imageNamed:@"DefaultHeader.png"]];
            self.healthIndexView.userNameLb.text = [FFConfig currentConfig].userShowName;
        }
    }
}
- (void)deviceDisConnectOK
{
    self.progressView.scoreNumLb.text = @"0.0";
    self.progressView.scoreLb.text = @"失去连接，请重新连接";
    [self.progressView showHighestLabel];
}
- (void)deviceConnectOK
{
    self.progressView.scoreNumLb.text = @"0.0";
    self.progressView.scoreLb.text = @"连接成功";
    BBTipView *tip = [[BBTipView alloc] initWithView:self.view message:@"连接成功，请上称测量" posY:100];
    [tip show];
    [self.progressView showHighestLabel];
}
- (void)deviceConnectFail
{
    self.progressView.scoreNumLb.text = @"0.0";
    self.progressView.scoreLb.text = @"连接失败";
    [self.progressView showHighestLabel];
}
- (void)deviceDeviceDiscover
{
//    [self.progressView showConnectImg];
}
- (void)initBaseData
{
    [BodyScaleBTInterface selectUserMeasureWithLocation:9 height:self.fillData.height age:self.fillData.userAge sex:self.fillData.sex ackHandler:^(NSError *error){
        DLog(@"ack error is %@",error);
    }completionHandler:^(NSError *error, NSDictionary *response){
        self.mesureModel.water = [NSString stringWithFormat:@"%@%@",[response objectForKey:@"water"],@"%"];
        self.mesureModel.bodyFat = [NSString stringWithFormat:@"%@%@",[response objectForKey:@"bodyFat"],@"%"];
        NSMutableString * weightStr =[NSMutableString stringWithFormat:@"%@kg",[response objectForKey:@"weight"]];
        self.mesureModel.weight = weightStr;
        [self.progressView showHighestLabel];
    }extraDataHandler:^(NSError *error, NSDictionary *extraInfo){
        DLog(@"extra data is %@ error is %@",extraInfo,error);
        int bodyAge = [[extraInfo objectForKey:@"bodyAge"] floatValue];
        self.mesureModel.bodyAge = [NSString stringWithFormat:@"%d", bodyAge];
        float inFat = [[extraInfo objectForKey:@"inFat"] floatValue];
        self.mesureModel.inFat = [NSString stringWithFormat:@"%.2f%@", inFat, @"%"];
        float sFat = [[extraInfo objectForKey:@"sFat"] floatValue];
        self.mesureModel.sFat = [NSString stringWithFormat:@"%.2f", sFat];
        float bmr = [[extraInfo objectForKey:@"BMR"] floatValue];
        self.mesureModel.bmr = [NSString stringWithFormat:@"%.2f", bmr];
        float bone = [[extraInfo objectForKey:@"bone"] floatValue];
        self.mesureModel.bone = [NSString stringWithFormat:@"%.2fkg", bone];
        float muscle = [[extraInfo objectForKey:@"muscle"] floatValue];
        self.mesureModel.muscle = [NSString stringWithFormat:@"%.2f%@", muscle, @"%"];
        [self setWeightValue];
        [self.tableView reloadData];
        [self.progressView showHighestLabel];
        self.progressView.scoreNumLb.text = @"88.2";
        self.progressView.scoreLb.text = @"健康指数\n最高92分";
    }];
}
- (void)initBaseView
{
    if ([[NSUserDefaults standardUserDefaults] boolForKey:HASALREADYCONNECTED])
    {
        [self initBaseViewConnected];
    }
    else
    {
        [self initBaseViewUnconnected];
    }
}
- (void)initBaseViewConnected
{
    CGFloat leftX = 43.0f;
    CGFloat width = Screen_Width-leftX*2-10;
    [self.healthIndexView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@0);
        make.right.equalTo(@0);
        make.top.equalTo(@0);
        make.height.equalTo(@(370));
    }];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@0);
        make.right.equalTo(@0);
        make.top.equalTo(self.healthIndexView.mas_bottom).with.offset(0);
        make.bottom.equalTo(self.view.mas_bottom).with.offset(0);
    }];
    [self.progressView mas_makeConstraints:^(MASConstraintMaker *maker){
        maker.left.equalTo(@(leftX));
        maker.top.equalTo(@80);
        maker.height.equalTo(@(width));
        maker.width.equalTo(@(width));
    }];
    [self performSelector:@selector(animation:) withObject:@"0" afterDelay:0.2];
    self.healthIndexView.weightLabel.text = @"您的体重已超标，请控制饮食，多运动";
    self.healthIndexView.bmiNumLb.text = @"18.9";
    self.healthIndexView.ageLb.text = @"24";
}
- (void)initBaseViewUnconnected
{
    CGFloat leftX = 43;
    CGFloat width = Screen_Width-leftX*2-10;
    [self.healthIndexView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@0);
        make.right.equalTo(@0);
        make.top.equalTo(@0);
        make.height.equalTo(@(370));
    }];
    [self.tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(@0);
        make.right.equalTo(@0);
        make.top.equalTo(self.healthIndexView.mas_bottom).with.offset(0);
        make.bottom.equalTo(self.view.mas_bottom).with.offset(0);
    }];
    [self.progressView mas_makeConstraints:^(MASConstraintMaker *maker){
        maker.left.equalTo(@(leftX));
        maker.top.equalTo(@80);
        maker.height.equalTo(@(width));
        maker.width.equalTo(@(width));
    }];
    [self performSelector:@selector(animation:) withObject:@"0" afterDelay:0.2];
    self.healthIndexView.weightLabel.text =  @"";
    self.healthIndexView.bmiNumLb.text = @"00.";
    self.healthIndexView.ageLb.text = @"00";
}
- (void)setWeightValue
{
    for (WeightModel * model in self.gList)
    {
        if ([model.weightName isEqualToString:@"体重"])
        {
            model.weightValue = self.mesureModel.weight;
        }
        if ([model.weightName isEqualToString:@"体脂率"])
        {
            model.weightValue = self.mesureModel.bodyFat;
        }
        if ([model.weightName isEqualToString:@"水含量"])
        {
            model.weightValue = self.mesureModel.water;
        }
        if ([model.weightName isEqualToString:@"BMR"])
        {
            model.weightValue = self.mesureModel.bmr;
        }
        if ([model.weightName isEqualToString:@"皮下脂肪"])
        {
            model.weightValue = self.mesureModel.sFat;
        }
        if ([model.weightName isEqualToString:@"骨骼重量"])
        {
            model.weightValue = self.mesureModel.bone;
        }
        if ([model.weightName isEqualToString:@"肌肉比例"])
        {
            model.weightValue = self.mesureModel.muscle;
        }
        if ([model.weightName isEqualToString:@"内脏脂肪"])
        {
            model.weightValue = self.mesureModel.inFat;
        }
        if ([model.weightName isEqualToString:@"身体年龄"])
        {
            model.weightValue = self.mesureModel.bodyAge;
        }
    }
}
- (void)animation:(NSString*)percent
{
    CGFloat floatpercent = [percent floatValue];
    [self.progressView setProgress:floatpercent animated:YES];
}
- (void)selectHeadBt
{
    [self.sideMenuViewController presentLeftMenuViewController];
}
- (void)selectshareBt
{
    self.shareView.frame = CGRectMake(0, Screen_Height, Screen_Width, share_Height);
    UIWindow *window = [UIApplication sharedApplication].keyWindow;
    [window addSubview:self.shareBgView];
    [UIView animateWithDuration:1.0 animations:^{
        [self.shareView setFrame:CGRectMake(0, Screen_Height-share_Height+26, Screen_Width, share_Height)];
    } ];
}
- (void)respondsToHudBgView
{
    [hudBgView removeFromSuperview];
}
- (void)removeBlackView
{
    [UIView animateWithDuration:1.0 animations:^{
        [self.shareView setFrame:CGRectMake(0, Screen_Height, Screen_Width, share_Height)];
    } completion:^(BOOL finished) {
        [self.shareBgView removeFromSuperview];
    }];
}
- (void)shareSpace:(id)sender
{
    UIButton *bt = (UIButton*)sender;
    NSString *imagePath = @"";
    [self.shareBgView removeFromSuperview];
    
    //构造分享内容
    id<ISSContent> publishContent = [ShareSDK content:@"测试数据" defaultContent:@"" image:[ShareSDK imageWithPath:imagePath] title:@"ShareSDK" url:@"http://www.mob.com" description:NSLocalizedString(@"TEXT_TEST_MSG", @"这是一条测试信息") mediaType:SSPublishContentMediaTypeNews];
    
    ///////////////////////
    //以下信息为特定平台需要定义分享内容，如果不需要可省略下面的添加方法
    //定制QQ空间信息
    [publishContent addQQSpaceUnitWithTitle: @"Hello QQ空间" url:INHERIT_VALUE site:nil fromUrl:nil comment:INHERIT_VALUE summary:INHERIT_VALUE image:INHERIT_VALUE  type:INHERIT_VALUE playUrl:nil nswb:nil];
    
    //定制微信好友信息
    [publishContent addWeixinSessionUnitWithType:INHERIT_VALUE content:INHERIT_VALUE title:@"Hello 微信好友!"  url:INHERIT_VALUE thumbImage:[ShareSDK imageWithUrl:@""] image:INHERIT_VALUE musicFileUrl:nil extInfo:nil fileData:nil emoticonData:nil];
    
    //定制微信朋友圈信息
    [publishContent addWeixinTimelineUnitWithType:[NSNumber numberWithInteger:SSPublishContentMediaTypeMusic] content:INHERIT_VALUE title:@"Hello 微信朋友圈!" url:@""  thumbImage:[ShareSDK imageWithUrl:@""]  image:INHERIT_VALUE musicFileUrl:@"" extInfo:nil fileData:nil emoticonData:nil];
    
    //定制微信收藏信息
    [publishContent addWeixinFavUnitWithType:INHERIT_VALUE  content:INHERIT_VALUE  title:@"Hello 微信收藏!" url:INHERIT_VALUE thumbImage:[ShareSDK imageWithUrl:@""] image:INHERIT_VALUE musicFileUrl:nil  extInfo:nil fileData:nil  emoticonData:nil];
    
    //定制QQ分享信息
    [publishContent addQQUnitWithType:INHERIT_VALUE content:INHERIT_VALUE title:@"Hello QQ!" url:INHERIT_VALUE image:INHERIT_VALUE];
    id<ISSAuthOptions> authOptions = [ShareSDK authOptionsWithAutoAuth:YES allowCallback:YES authViewStyle:SSAuthViewStyleFullScreenPopup viewDelegate:nil authManagerViewDelegate:self];
    
    if (bt.tag == 1002 )
    {
        [ShareSDK shareContent:publishContent type:ShareTypeQQSpace authOptions:authOptions statusBarTips:YES result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
        }];
    }
    else if (bt.tag == 1003)
    {
        [ShareSDK shareContent:publishContent type:ShareTypeSinaWeibo authOptions:authOptions statusBarTips:YES result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
        }];
    }
    else if (bt.tag == 1000)
    {
        //        snsName = @"wxsession";
        [ShareSDK showShareViewWithType:ShareTypeWeixiSession container:nil content:publishContent statusBarTips:YES authOptions:authOptions shareOptions:[ShareSDK defaultShareOptionsWithTitle:nil oneKeyShareList:[NSArray defaultOneKeyShareList] qqButtonHidden:NO wxSessionButtonHidden:NO wxTimelineButtonHidden:NO showKeyboardOnAppear:NO shareViewDelegate:self friendsViewDelegate:self picViewerViewDelegate:nil] result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
        }];
    }
    else if(bt.tag == 1001)
    {
        [ShareSDK showShareViewWithType:ShareTypeWeixiTimeline container:nil content:publishContent statusBarTips:YES authOptions:authOptions shareOptions:[ShareSDK defaultShareOptionsWithTitle:nil oneKeyShareList:[NSArray defaultOneKeyShareList] qqButtonHidden:NO wxSessionButtonHidden:NO wxTimelineButtonHidden:NO showKeyboardOnAppear:NO shareViewDelegate:self friendsViewDelegate:self picViewerViewDelegate:nil] result:^(ShareType type, SSResponseState state, id<ISSPlatformShareInfo> statusInfo, id<ICMErrorInfo> error, BOOL end) {
        }];
    }
}

#pragma mark - System Delegate & Datasource
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.gList.count;
}
-(CenterTableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    CenterTableViewCell *cell  = nil;
    if (indexPath.row < [self.gList count])
    {
        WeightModel * temp = [self.gList objectAtIndex:indexPath.row];
        cell = [[CenterTableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:kCellReuseIdentifier model:temp];
    }
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.separatorInset = UIEdgeInsetsMake(0, 0, 0, 0);
    return cell;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
//    CGFloat insetTop =Screen_Height*3/4-12;
//    if (!hudBgView)
//    {
//        hudBgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, Screen_Height)];
//        [hudBgView setBackgroundColor:[UIColor clearColor]];
//        HudView* hudView = [[HudView alloc] initWithFrame:CGRectMake(0, 0, (Screen_Width-32), 105) WithText:@"人体含水量的百分比，充分的水分能促进新陈代谢"];
//        [hudView setFrame:CGRectMake(16, insetTop, (Screen_Width-32), 105)];
//        [hudBgView addSubview:hudView];
//        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(respondsToHudBgView)];
//        [hudBgView addGestureRecognizer:tap];
//    }
//    UIWindow *window = [UIApplication sharedApplication].keyWindow;
//    [window addSubview:hudBgView];
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 70;
}

#pragma mark - manage memory methods

@end
