//
//  ModifyUserBaseInfoViewController.m
//  BodyScaleProduction
//
//  Created by Go Salo on 14-3-25.
//  Copyright (c) 2014年 Go Salo. All rights reserved.
//

#import "ModifyUserBaseInfoViewController.h"
#import "HorizontalPickerView.h"

@interface ModifyUserBaseInfoViewController ()<HorizontalPickerViewDataSource, HorizontalPickerViewDelegate>
@property (weak, nonatomic) IBOutlet UILabel *typeStateLabel;
@property (weak, nonatomic) IBOutlet UILabel *valueLabel;

@end

@implementation ModifyUserBaseInfoViewController {
    ModifyType _type;
    NSInteger  _value;
    
    HorizontalPickerView *_pickerView;
    NSArray *_arrowImageViews;
    
    NSString    *_changedValue;
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil modifyType:(ModifyType)modifyType
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        _type = modifyType;
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    if (_type == ModifyTypeUserTarget) {
        self.title = @"设置目标";
    } else {
        self.title = @"我的个人资料";
    }
    
    _pickerView = [[HorizontalPickerView alloc] initWithFrame:CGRectMake(0,
                                                                         80,
                                                                         SCREEN_WIDTH,
                                                                         79)
                                                           delegate:self
                                                         dataSource:self];
    [self.view addSubview:_pickerView];
    
    NSString *imageName = @"triangle.png";
    UIImage *image = [UIImage imageNamed:imageName];
    UIImageView *imageView1 = [[UIImageView alloc] initWithImage:image];
    [imageView1 setFrame:CGRectMake(_pickerView.frame.size.width / 2 - image.size.width / 2,
                                    _pickerView.frame.origin.y,
                                    image.size.width,
                                    image.size.height)];
    [self.view addSubview:imageView1];
    
    UIImageView *imageView2 = [[UIImageView alloc] initWithImage:image];
    imageView2.transform = CGAffineTransformRotate(imageView2.transform, M_PI);
    [imageView2 setFrame:CGRectMake(_pickerView.frame.size.width / 2 - image.size.width / 2,
                                    _pickerView.frame.origin.y + _pickerView.frame.size.height - image.size.height,
                                    image.size.width,
                                    image.size.height)];
    [self.view addSubview:imageView2];
    _arrowImageViews = @[imageView1, imageView2];
    
    NSString *valueString = nil;
    switch (_type) {
        case ModifyTypeUserAge:
            self.typeStateLabel.text = @"年龄                    岁";
            valueString = [[GloubleProperty sharedInstance] currentUserEntity].UI_age;
            self.title = @"修改年龄";
            break;
        case ModifyTypeUserHeight:
            self.typeStateLabel.text = @"身高                    cm";
            self.title = @"修改身高";
            valueString = [[GloubleProperty sharedInstance] currentUserEntity].UI_height;
            break;
        case ModifyTypeUserTarget:
            self.title = @"修改目标体重";
            self.typeStateLabel.text = @"目标                    kg";
            valueString = [[GloubleProperty sharedInstance] currentUserEntity].UI_target;
            break;
        default:
            break;
    }
    
    if (valueString.length) {
        switch (_type) {
            case ModifyTypeUserAge:
                [_pickerView setCurrentIndex:[valueString intValue] - 10];
                break;
            case ModifyTypeUserHeight:
                [_pickerView setCurrentIndex:[valueString intValue] - 100];
                break;
            case ModifyTypeUserTarget:
                [_pickerView setCurrentIndex:[valueString intValue]];
                break;
            default:
                break;
        }
        self.valueLabel.text = valueString;
    }
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Actions
- (IBAction)sureButtonAction:(id)sender {
    switch (_type) {
        case ModifyTypeUserAge:
            [[GloubleProperty sharedInstance] currentUserEntity].UI_age = _changedValue;
            break;
        case ModifyTypeUserHeight:
            [[GloubleProperty sharedInstance] currentUserEntity].UI_height = _changedValue;
            break;
        case ModifyTypeUserTarget:
            [[GloubleProperty sharedInstance] currentUserEntity].UI_target = _changedValue;
            break;
        default:
            break;
    }
    [GloubleProperty sharedInstance].currentUserInfoWillUpDate = YES;
    
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - PickerView Delegate
- (NSInteger)numberOfItemsInPickerView:(id)pickerView {
    switch (_type) {
        case ModifyTypeUserAge:
            return 71;
            break;
        case ModifyTypeUserHeight:
            return 121;
            break;
        case ModifyTypeUserTarget:
            return 151;
            break;
        default:
            return 0;
            break;
    }
}

- (NSString *)pickerView:(id)pickerView titleForItemsIndex:(NSInteger)index {
    switch (_type) {
        case ModifyTypeUserAge:
            return [NSString stringWithFormat:@"%d", (int)index + 10];
            break;
        case ModifyTypeUserHeight:
            return [NSString stringWithFormat:@"%d", (int)index + 100];
            break;
        case ModifyTypeUserTarget:
            return [NSString stringWithFormat:@"%d", (int)index];
            break;
        default:
            break;
    }
}

- (void)pickerView:(HorizontalPickerView *)pickerView indexChaged:(NSInteger)index {
    NSString *value = nil;
    switch (_type) {
        case ModifyTypeUserAge:
            value = [NSString stringWithFormat:@"%d", (int)index + 10];
//            [[GloubleProperty sharedInstance] currentUserEntity].UI_age = value;
            break;
        case ModifyTypeUserHeight:
            value = [NSString stringWithFormat:@"%d", (int)index + 100];
//            [[GloubleProperty sharedInstance] currentUserEntity].UI_height = value;
            break;
        case ModifyTypeUserTarget:
            value = [NSString stringWithFormat:@"%d", (int)index];
//            [[GloubleProperty sharedInstance] currentUserEntity].UI_target = value;
            break;
        default:
            break;
    }
    self.valueLabel.text = value;
    _changedValue = value;
//    [GloubleProperty sharedInstance].currentUserInfoWillUpDate = YES;
}

@end
