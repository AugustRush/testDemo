//
//  LeftSideViewController.m
//  BodyScaleProduction
//
//  Created by Go Salo on 14-3-19.
//  Copyright (c) 2014年 Go Salo. All rights reserved.
//

#import "LeftSideViewController.h"
#import "InputUserInfoViewController.h"
#import "AQAlertView.h"
#import "FriendPermissionViewController.h"
#import "FriendInfoEntity.h"
#import "BTModel.h"
#import "PraiseMeViewController.h"
#import "MyInfoViewController.h"
#import "UIViewController+MMDrawerController.h"
#import "UIAlertView+Blocks.h"
#import "MessageViewController.h"
#import "RemindWeightViewController.h"
#import "LeftSideTableViewCell.h"
#import "UIImageView+WebCache.h"
#import "AppDelegate.h"
#import "BaseNavigationController.h"
#import "UserManagerViewController.h"
#import "PersonalCenterViewController.h"
#import "HealthMeViewController.h"
#import "BuyRyfitMainController.h"

NSString *const AQHasNewMessageNotification = @"AQHasNewMessageNotification";


#define kLeftSrt001 @"toBuyRyFit"
#define kLeftToBRImgAName @"Left_btn_toBuyRyFit_a.png"
#define kLeftToBRImgBName @"Left_btn_toBuyRyFit_b.png"
#define kLeftCellHeight001 50
#define kLeftCellHeight002 115
#define kLeftCellWeight 225

@interface LeftSideViewController () <UIAlertViewDelegate>

@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIImageView *photoImageView;
@property (weak, nonatomic) IBOutlet UILabel *userNickNameLabel;
@property (weak, nonatomic) IBOutlet UIImageView *backgroundImageView;

@end

@implementation LeftSideViewController {
    NSArray *_options;
    NSArray *_optionImages;
    UILabel *messageLabel;

}

#pragma mark - View Lifecycle

- (void)dealloc
{
    [self unregisterNotification];
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        [self registerNotification];
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    _options = @[@"新消息", @"Health@Me", @"用户管理", @"访客模式"];
    _optionImages = @[@"xiaoxi.png", @"haoyou.png", @"zhanghu.png", @"fangke.png"];
    
    messageLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 22, 22)];
    messageLabel.layer.cornerRadius = 11;
    messageLabel.layer.masksToBounds = YES;
    messageLabel.textAlignment = NSTextAlignmentCenter;
    messageLabel.textColor = [UIColor whiteColor];
    messageLabel.text = @"10";
    messageLabel.backgroundColor = [UIColor colorWithRed:230/255.0 green:47/255.0 blue:52/255.0 alpha:1];
    messageLabel.font = [UIFont systemFontOfSize:12];
    messageLabel.hidden = YES;
    
    CGRect _rect            = self.tableView.frame;
    _rect.size.height       = [UIScreen mainScreen].bounds.size.height - 280;
    self.tableView.frame    = _rect;
    if ([UIScreen mainScreen].bounds.size.height > 500) {
        self.tableView.scrollEnabled = NO;
    }
    
    

    UIView *_viewFoot = [[UIView alloc]initWithFrame:CGRectMake(0, 0, kLeftCellWeight,kLeftCellHeight002 )];
    
    _viewFoot.backgroundColor = [UIColor clearColor];
    
    UIButton *_btn          = [UIButton buttonWithType:UIButtonTypeCustom];
    [_btn setBackgroundImage:[UIImage imageNamed:kLeftToBRImgAName]
                    forState:UIControlStateNormal];
    [_btn setBackgroundImage:[UIImage imageNamed:kLeftToBRImgBName]
                    forState:UIControlStateHighlighted];
    
    _rect            = CGRectMake(84, 30, 56, 56);
    _btn.frame              = _rect;
    
    _btn.backgroundColor    = [UIColor clearColor];
    [_btn addTarget:self
             action:@selector(cellDown:)
   forControlEvents:UIControlEventTouchUpInside];
    [_viewFoot addSubview:_btn];
    self.tableView.tableFooterView = _viewFoot;
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];

    [self refreshMessage];
    [self refreshPhoto];
}

- (void)presentViewController:(UIViewController *)viewControllerToPresent animated:(BOOL)flag completion:(void (^)(void))completion {
    [GloubleProperty sharedInstance].leftViewWillAppear = NO;
    [super presentViewController:viewControllerToPresent animated:flag completion:completion];
    [GloubleProperty sharedInstance].leftViewWillAppear = YES;
}

#pragma mark - Override Methods

- (void)configureThemeAppearance {
    [super configureThemeAppearance];
    
    self.backgroundImageView.image = ThemeImage(@"beijing_zuo");
}

#pragma mark - Private Methods

- (void)refreshMessage {
    [[InterfaceModel sharedInstance] getMSGWithCallback:^(WebCallBackResult result, id successParam, NSString *errorMsg) {
        if (result == WebCallBackResultSuccess) {
            if ([successParam isKindOfClass:[NSNumber class]]) {
                NSInteger msgCount = ((NSNumber *)successParam).intValue;
                [self refreshMessageLabelWithMessageCount:msgCount];
            }
        }
    }];
}

// 将所有消息置为已读
- (void)readAllMessages {
    [[InterfaceModel sharedInstance] setMsgReadedWithCallBack:^(WebCallBackResult result, id successParam, NSString *errorMsg) {
        if (result == WebCallBackResultSuccess) {
            [self refreshMessageLabelWithMessageCount:0];
        }
    }];
}

- (void)refreshMessageLabelWithMessageCount:(int)count {
    if (count == 0) {
        messageLabel.hidden = YES;
    } else {
        messageLabel.hidden = NO;
        messageLabel.text = [NSString stringWithFormat:@"%d", count];
    }
}

#pragma mark - Public Methods

- (void)refreshPhoto {
    // 设置头像用户名
    UserInfoEntity *userInfo = [[InterfaceModel sharedInstance] getHostUser];
    self.userNickNameLabel.text = userInfo.UI_nickname;
    NSString *urlString = [NSString stringWithFormat:@"%@%@", SERVICE_URL, userInfo.UI_photoPath];
    NSURL *photoURL = [NSURL URLWithString:urlString];
    
    int gender = [userInfo.UI_sex intValue];
    UIImage *placeholderImage = nil;
    if (gender == 0) {
        placeholderImage = [UIImage imageNamed:@"default_photo_females.png"];
    } else {
        placeholderImage = [UIImage imageNamed:@"default_photo_males.png"];
    }
    
    if (userInfo.UI_photoPath.length) {
        [self.photoImageView setImageWithURL:photoURL placeholderImage:placeholderImage];
    } else {
        [self.photoImageView setImage:placeholderImage];
    }
    // 设置头像用户名 END
}

- (void)hackViewWillAppearAfterDismissViewController {
    [self refreshMessage];
}

#pragma mark - Notification 

- (void)registerNotification {
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshMessage) name:AQHasNewMessageNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(refreshMessage) name:UIApplicationWillEnterForegroundNotification object:nil];
}

- (void)unregisterNotification {
    [[NSNotificationCenter defaultCenter] removeObserver:self name:AQHasNewMessageNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIApplicationWillEnterForegroundNotification object:nil];
}

#pragma mark - Actions

- (IBAction)tapUserPhotoAction:(id)sender {
    PersonalCenterViewController *personCenterVC = [[PersonalCenterViewController alloc] initWithNibName:@"PersonalCenterViewController" bundle:nil];
    BaseNavigationController *personCenterNavVC = [[BaseNavigationController alloc] initWithRootViewController:personCenterVC];
//    personCenterNavVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
    [self presentViewController:personCenterNavVC animated:YES completion:NULL];
    
    [Flurry logEvent:@"左侧边栏" withParameters:@{@"用户头像按钮":@"弹出个人中心"} timed:YES];
}

- (IBAction)logoutButtonAction:(id)sender {
    [ViewUtilFactory presentAlertViewWithTitle:@"退出"
                                       message:@"是否退出账户"
                                      delegate:self
                             cancelButtonTitle:@"取消"
                             otherButtonTitles:@"确定", nil];
    
    [Flurry logEvent:@"左侧边栏" withParameters:@{@"退出登录按钮":@"退出登录"} timed:YES];
}

#pragma mark - UIAlertView Delegate

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex == 0) {
        
    } else if (buttonIndex == 1) {
        [[BTModel sharedInstance] selectUserInScale:nil isTesting:YES];
        [[InterfaceModel sharedInstance] userLogoutWithCallBack:nil];
        [GloubleProperty sharedInstance].currentUserEntity = nil;
        AppDelegate *delegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
        [delegate loginAndRegisterViewAppear];
        
        [Flurry logEvent:USER_LOG_OUT_EVENT];
    }
}


#pragma mark - UITableViewDataSource and Delegate

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return _options.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView
         cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *identifier = @"LeftSideViewCell";
    LeftSideTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    
    
    if (!cell) {
        cell = [[[NSBundle mainBundle] loadNibNamed:@"LeftSideTableViewCell" owner:self options:nil] firstObject];

        UIImageView *_viewLine = [[UIImageView alloc]initWithFrame:CGRectMake(20, 49,205, 1)];
        _viewLine.image = [UIImage imageNamed:@"fengexian.png"];
        _viewLine.tag = 111111;
        [cell.contentView addSubview:_viewLine];
        
    }
    
    cell.accessoryView = nil;
    
    if (indexPath.row == 0) {
        cell.accessoryView = messageLabel;
    }
    
    UIView *_viewLine   = [cell.contentView viewWithTag:111111];

    if ([kLeftSrt001 isEqualToString:_options[indexPath.row]]) {
        cell.textLabel.text = nil;
        _viewLine.hidden = YES;

    }
    else{
        cell.textLabel.text = _options[indexPath.row];
        _viewLine.hidden = NO;

    }

    
    cell.imageView.image = [UIImage imageNamed:_optionImages[indexPath.row]];
    
    return cell;
}

-       (CGFloat)tableView:(UITableView *)tableView
   heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return kLeftCellHeight001;

}

-(void)cellDown:(UIButton *)cellBtn
{
    
    BuyRyfitMainController *_BRMainVC = [[BuyRyfitMainController alloc] init];
    
    BaseNavigationController *BRMainManagerNav = [[BaseNavigationController alloc] initWithRootViewController:_BRMainVC];
    [self presentViewController:BRMainManagerNav animated:YES completion:NULL];
    [Flurry logEvent:@"左侧边栏"
      withParameters:@{@"去购买RyFit":@"弹出购买RyFit主页面"}
               timed:YES];
    
}



/*
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    
    int _index = cellBtn.tag % 111000;
    
    if (_cellIsBeDown != _index) {
        return;
    }
    
    if (![kLeftSrt001 isEqualToString:_options[_index]])
    {
        cellBtn.backgroundColor = [UIColor clearColor];
    }
    _cellIsBeDown = -1;
    
    
    switch (_index) {
        case 0: {
            [self readAllMessages];
            
            MessageViewController *messageVC = [[MessageViewController alloc] initWithNibName:@"MessageViewController" bundle:nil];
            //            messageVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
            BaseNavigationController *messageNav = [[BaseNavigationController alloc] initWithRootViewController:messageVC];
            [self presentViewController:messageNav animated:YES completion:NULL];
            
            [Flurry logEvent:@"左侧边栏" withParameters:@{@"新消息栏":@"弹出新消息页面"} timed:YES];
        }
            break;
        case 1: {
            HealthMeViewController *healthMeVC = [[HealthMeViewController alloc] initWithNibName:@"HealthMeViewController" bundle:nil];
            //            healthMeVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
            BaseNavigationController *healthMeNav = [[BaseNavigationController alloc] initWithRootViewController:healthMeVC];
            [self presentViewController:healthMeNav animated:YES completion:NULL];
            
            [Flurry logEvent:@"左侧边栏" withParameters:@{@"health@me":@"弹出关注页面"} timed:YES];
        }
            break;
        case 2: {
            UserManagerViewController *userManagerVC = [[UserManagerViewController alloc] initWithNibName:@"UserManagerViewController" bundle:nil];
            //            userManagerVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
            BaseNavigationController *userManagerNav = [[BaseNavigationController alloc] initWithRootViewController:userManagerVC];
            [self presentViewController:userManagerNav animated:YES completion:NULL];
            
            [Flurry logEvent:@"左侧边栏" withParameters:@{@"用户管理栏":@"弹出用户管理页面"} timed:YES];
        }
            break;
        case 3: {
            InputUserInfoViewController *inputUserInfoVC = [[InputUserInfoViewController alloc] initWithNibName:@"InputUserInfoViewController" bundle:nil type:FlowTypeGuest];
            BaseNavigationController *userManagerNav = [[BaseNavigationController alloc] initWithRootViewController:inputUserInfoVC];
            [self presentViewController:userManagerNav animated:YES completion:NULL];
#warning 行为统计  访客模式
        }
            break;
        default:
        {
            
        }
            break;
    }
    if ([kLeftSrt001 isEqualToString:_options[_index]]) {
        BuyRyfitMainController *_BRMainVC = [[BuyRyfitMainController alloc] init];
        
        BaseNavigationController *BRMainManagerNav = [[BaseNavigationController alloc] initWithRootViewController:_BRMainVC];
        [self presentViewController:BRMainManagerNav animated:YES completion:NULL];
        [Flurry logEvent:@"左侧边栏"
          withParameters:@{@"去购买RyFit":@"弹出购买RyFit主页面"}
                   timed:YES];
    }
    
    
=======
    return kLeftCellHeight002;
>>>>>>> .r1936
}

-   (UIView *)tableView:(UITableView *)tableView
 viewForFooterInSection:(NSInteger)section
{
 
    
    return _btn;
}
*/


- (void)tableView:(UITableView *)tableView
didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{


            [tableView deselectRowAtIndexPath:indexPath animated:YES];

    switch (indexPath.row) {
        case 0: {
            [self readAllMessages];
            
            MessageViewController *messageVC = [[MessageViewController alloc] initWithNibName:@"MessageViewController" bundle:nil];
            //            messageVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
            BaseNavigationController *messageNav = [[BaseNavigationController alloc] initWithRootViewController:messageVC];
            [self presentViewController:messageNav animated:YES completion:NULL];
            
            [Flurry logEvent:@"左侧边栏" withParameters:@{@"新消息栏":@"弹出新消息页面"} timed:YES];
        }
            break;
        case 1: {
            HealthMeViewController *healthMeVC = [[HealthMeViewController alloc] initWithNibName:@"HealthMeViewController" bundle:nil];
            //            healthMeVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
            BaseNavigationController *healthMeNav = [[BaseNavigationController alloc] initWithRootViewController:healthMeVC];
            [self presentViewController:healthMeNav animated:YES completion:NULL];
            
            [Flurry logEvent:@"左侧边栏" withParameters:@{@"health@me":@"弹出关注页面"} timed:YES];
        }
            break;
        case 2: {
            UserManagerViewController *userManagerVC = [[UserManagerViewController alloc] initWithNibName:@"UserManagerViewController" bundle:nil];
            //            userManagerVC.modalTransitionStyle = UIModalTransitionStyleCrossDissolve;
            BaseNavigationController *userManagerNav = [[BaseNavigationController alloc] initWithRootViewController:userManagerVC];
            [self presentViewController:userManagerNav animated:YES completion:NULL];
            
            [Flurry logEvent:@"左侧边栏" withParameters:@{@"用户管理栏":@"弹出用户管理页面"} timed:YES];
        }
            break;

        case 3: {
            InputUserInfoViewController *inputUserInfoVC = [[InputUserInfoViewController alloc] initWithNibName:@"InputUserInfoViewController" bundle:nil type:FlowTypeGuest checkCode:nil];
            BaseNavigationController *userManagerNav = [[BaseNavigationController alloc] initWithRootViewController:inputUserInfoVC];
            [self presentViewController:userManagerNav animated:YES completion:NULL];
        }
            break;

        default:
        {
            
        }
            break;
    }
}

@end
